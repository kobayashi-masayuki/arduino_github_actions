name: Test Sketches

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types:
      - opened
      - synchronize
  workflow_dispatch:

jobs:
  formatting-check:
    name: Formatting Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        path:
          - test
          - release
    steps:
      - name: Set environment variables
        run: |
          # See: https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#setting-an-environment-variable
          echo "CLANG_FORMAT_INSTALL_PATH=${{ runner.temp }}/clang-format" >> "$GITHUB_ENV"
          echo "REVIEWDOG_INSTALL_PATH=${{ runner.temp }}/reviewdog" >> "$GITHUB_ENV"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Run clang-format style check for C/C++/Protobuf programs
        uses: jidicula/clang-format-action@v4.15.0
        with:
          clang-format-version: '20'
          check-path: ${{ matrix.path }}
          fallback-style: 'Google' # optional

      - name: Install Reviewdog
        run: |
          wget -O - -q https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh \
            | sh -s -- -b ${{ env.REVIEWDOG_INSTALL_PATH }}
          echo "${{ env.REVIEWDOG_INSTALL_PATH }}" >> "$GITHUB_PATH"

      - name: Check formatting
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if ! git diff --color --exit-code; then
            git diff | reviewdog -f=diff -name="format-check" -reporter=github-pr-review
            echo "Please do an Auto Format on the sketches:"
            echo "Arduino IDE: Tools > Auto Format"
            echo "Arduino Web Editor: Ctrl + B"
            exit 1
          fi

  test:
    name: 'test: ${{ matrix.board.fqbn }}'
    runs-on: ubuntu-latest
    needs: formatting-check
    strategy:
      fail-fast: false
      matrix:
        board:
          - fqbn: esp32:esp32:esp32
            platforms: |
              - name: esp32:esp32
                source-url: https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Compile all test sketches
        uses: arduino/compile-sketches@v1.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          fqbn: ${{ matrix.board.fqbn }}
          platforms: ${{ matrix.board.platforms }}
          sketch-paths: |
            tests
            release
          libraries: |
            AUnit
          sketches-report-path: sketches-reports
          enable-deltas-report: true
          enable-warnings-report: true

      - name: Upload compile report
        uses: actions/upload-artifact@v4
        with:
          name: test-compile-report
          path: sketches-reports